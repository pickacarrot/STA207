accepted = vv[order(vv$score, decreasing=TRUE),][1]
acc = sapply(questionId, function(x)
{
answer = subset(post.answer, qid == x)
answer[order(answer$score, decreasing=TRUE),]$text[1]
})
# write a function that for each text (html code chunk), find the R function mentioned in this piece of text
findFunction =
function(x) {
qq=unlist(strsplit(x," |\n|;"))
pattern = ".*?([.A-Za-z1-9]*)\\(.*"
tmp = sapply(qq, function(x){xx = gsub(pattern, "\\1", x)
if (!identical(xx,x))
return(xx)})
unique(unlist(tmp))
}
funcs = sapply(acc, findFunction)
funInAnswer = unlist(funcs)
funInAnswer = funInAnswer[nchar(funInAnswer)>0]
df.fun = data.frame(table(funInAnswer))
df.fun[order(df.fun$Freq, decreasing=TRUE),][1:10,]
post.comment = subset(rQAs, type == "comment")
funcs2 = sapply(post.comment$text, findFunction)
funInComment = unlist(funcs2)
funInComment = funInComment[nchar(funInComment)>0]
df.fun2 = data.frame(table(funInComment))
df.fun2[order(df.fun2$Freq, decreasing=TRUE),][1:10,]
commonTag
numGGplot # there are 609 posts about ggplot in my data frame
numGGplot2
numWeb
numWeb2
dim(post.question)
length(function.name)
rownames(post.question)[1:5]
?in
?do
is.function(get(do))
is.function(get("do"))
is.function(get("in"))
is.function(get("while"))
funIntitle[order(funIntitle$Freq, decreasing=TRUE),][1:10,]
is.function(get("frame"))
is.function(get("data"))
df.fun[order(df.fun$Freq, decreasing=TRUE),][1:10,]
df.fun2[order(df.fun2$Freq, decreasing=TRUE),][1:10,]
(250+265+268+269+288+273+270+269)/8
log(250)
log(265)
log(268)
log(269)
log(288)
log(288)
250+265+268+269
1052/4
288+273+270+269
1100/4
169+4+25+36+169+4+25+36
468*2
936+16
log(0.5)
log(0.5)*70
58*log(2/3) + 12*log(1/3)
0.73+0.67+0.15
1.55/3
0.86+0.75+0.21
1.82/3
0.94+0.81+0.26
2.01/3
1.4+1.32+0.75
3.47/3
1.62+1.41+0.78
3.81/3
0.73+0.86+0.94+1.4+1.62
5.55/5
0.67+0.75+0.81+1.32+1.41
4.96/5
0.15+0.21+0.26+0.75+0.78
2.15/5
5.55+4.96+2.15
/15
12.66/15
0.5176+1.11-0.844-0.73
0.73-0.5167-1.11+0.844
res = (-0.0527, 0.0053, 0.0473, -0.0127, -0.0047, 0.0173, 0.004, -0.008, 0.004, -0.0227, 0.0153, 0.0073, 0.084, -0.008, -0.076)
res = c(-0.0527, 0.0053, 0.0473, -0.0127, -0.0047, 0.0173, 0.004, -0.008, 0.004, -0.0227, 0.0153, 0.0073, 0.084, -0.008, -0.076)
res
len(res)
length(res)
Yhat = c(0.7827, 0.6647, 0.1027, 0.8727, 0.7547, 0.1927, 0.936, 0.818, 0.256, 1.4227, 1.3047, 0.7427, 1.536, 1.418, 0.856)
length(Yhat)
?plot
plot(Yhat, res, main = "Residual plot againt fitted values", xlab = "Yhat", ylab = "residuals")
plot(Yhat, res, which = 2)
qqnorm(res, main = "Normal Probability Plot", xlab = "Expvalue", ylab = "Residuals")
?plot
plot(Yhat, res, main = "Residual plot againt fitted values", xlab = "Yhat", ylab = "residuals", cex.main = 0.5)
plot(Yhat, res, main = "Residual plot againt fitted values", xlab = "Yhat", ylab = "residuals", cex.main = 0.75)
plot(Yhat, res, main = "Residual plot againt fitted values", xlab = "Yhat", ylab = "residuals", cex.main = 1)
data.frame(c(1,2), c(1,3))
data.frame(c(0.73, 0.86, 0.94, 1.4, 1.62), c(0.67,0.75, 0.81, 1.32, 1.41), c(0.15, 0.21, 0.26, 0.75, 0.78))
df <- data.frame(x=rep(1:5, 9), val=sample(1:100, 45),
variable=rep(paste0("category", 1:9), each=5))
df
x=rep(c("Extremely Low", "Fairly Low", "Moderately Low"), 5)
x
val=c(0.73, 0.67, 0.15, 0.86, 0.75, 0.21, 0.94, 0.81, 0.26, 1.4, 1.32, 0.75, 1.62, 1.41, 0.78)
val
length(val)
df = data.frame(x=rep(c("Extremely Low", "Fairly Low", "Moderately Low"), 5), val=c(0.73, 0.67, 0.15, 0.86, 0.75, 0.21, 0.94, 0.81, 0.26, 1.4, 1.32, 0.75, 1.62, 1.41, 0.78), block=rep(paste0("block", 1:5), each=3))
df
library(ggplot2)
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=variable))
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=block))
df
ggplot(data = df, aes(x=as.factor(x), y=val)) + geom_line(aes(colour=block))
summary(df)
class(df$x)
class(df$val)
class(df$block)
ggplot(data = df, aes(x, val)) + geom_line(aes(colour=block))
?ggplot
ggplot(data = df, aes(x, val)) + geom_line(aes(color=block))
ggplot(data = df, aes(x, val, color = block)) + geom_line(aes(color=block))
df = data.frame(x=rep(1:3, 5), val=c(0.73, 0.67, 0.15, 0.86, 0.75, 0.21, 0.94, 0.81, 0.26, 1.4, 1.32, 0.75, 1.62, 1.41, 0.78), block=rep(paste0("block", 1:5), each=3))
ggplot(data = df, aes(x, val, color = block)) + geom_line(aes(color=block))
ggplot(data = df, aes(x, val, color = block)) + geom_line(aes(color=block)) +
scale_x_discrete(breaks=c("1","2","3"),
labels=c("Extremely Low", "Fairly Low", "Moderately Low"))
ggplot(data = df, aes(x, val, color = block)) + geom_line(aes(color=block)) +
scale_x_discrete(breaks=c("1","2","3"), labels=c("Extremely Low", "Fairly Low", "Moderately Low")) +
geom_title("Plot of lipit level by blocks") +
xlab("Fat content of diet") +
ylab("Lipit levels")
ggplot(data = df, aes(x, val, color = block)) + geom_line(aes(color=block)) +
scale_x_discrete(breaks=c("1","2","3"), labels=c("Extremely Low", "Fairly Low", "Moderately Low")) +
ggtitle("Plot of lipit level by blocks") +
xlab("Fat content of diet") +
ylab("Lipit levels")
Yij = c(0.73, 0.67, 0.15, 0.86, 0.75, 0.21, 0.94, 0.81, 0.26, 1.4, 1.32, 0.75, 1.62, 1.41, 0.78)
Yhat = 0.844
Yij-Yhat
(Yij-Yhat)^2
sum((Yij-Yhat)^2)
SSTO =sum((Yij-Yhat)^2)
rho = c(-0.3273, -0.2372, -0.174, 0.3127, 0.426)
sum(rho)
rho^2
5*sum(rho^2)
SSBL = 5*sum(rho^2)
rho = c(-0.3273, -0.2372, -0.174, 0.3127, 0.426)
SSBL = 3*sum(rho^2)
tau = c(0.266, 0.148, -0.414)
SSTR = 5*sum(tau^2)
rep(rho, 3)
rep(rho, each = 3)
rep(tau, 5)
Yij*(rep(rho, each = 3))*(rep(tau, 5))
Dhat = sum(Yij*(rep(rho, each = 3))*(rep(tau, 5)))
Dhat = (sum(Yij*(rep(rho, each = 3))*(rep(tau, 5))))/((SSBL/3)*(SSTR/5))
Dhat
Dhat*(rep(rho, each = 3))*(rep(tau, 5))
(Dhat*(rep(rho, each = 3))*(rep(tau, 5)))^2
SSBLTR_star = sum((Dhat*(rep(rho, each = 3))*(rep(tau, 5)))^2)
SSRem_star = SSTO - SSBL - SSTR - SSBLTR_star
F_star = (SSBLTR_star/1)/(SSRem_star/7)
F_star
SSBLTR_star
SSRem_star
qf(F_star, 1, 7)
pf(F_star, 1, 7)
```
pVal = 1-pf(F_star, 1, 7)
pVal
threshold = qf(0.99, 1, 7)
threshold
SSTO
SSBL
SSTR
Dhat
SSBLTR_star
SSRem_star
F_star
0.0102/7
threshold
pVal
SSE = SSTO - SSBL - SSTR
SSE
c(1.4188, 1.3203, 0.0195)/c(4, 2, 8)
anovaTable = data.frame(c("Block", "Treatment", "Error", "Total"), c(4, 2, 8, 14), c(1.4188, 1.3203, 0.0195, 2.7586), c(c(1.4188, 1.3203, 0.0195)/c(4, 2, 8), NA))
anovaTable
anovaTable = data.frame(c("Block", "Treatment", "Error", "Total"), c(4, 2, 8, 14), c(1.4188, 1.3203, 0.0195, 2.7586), c(c(1.4188, 1.3203, 0.0195)/c(4, 2, 8), NA))
names(anovaTable) = c("Source", "df", "SS", "MS")
anovaTable
library("knitr")
kable(anovaTable)
ggplot(data = df, aes(x, val, color = block)) + geom_line(aes(shape=block)) +
scale_x_discrete(breaks=c("1","2","3"), labels=c("Extremely Low", "Fairly Low", "Moderately Low")) +
ggtitle("Plot of lipit level by blocks") +
xlab("Fat content of diet") +
ylab("Lipit levels")
ggplot(data = df, aes(x, val) + geom_line(aes(shape=block)) +
scale_x_discrete(breaks=c("1","2","3"), labels=c("Extremely Low", "Fairly Low", "Moderately Low")) +
ggtitle("Plot of lipit level by blocks") +
xlab("Fat content of diet") +
ylab("Lipit levels")
ggplot(data = df, aes(x, val)) + geom_line(aes(shape=block)) +
scale_x_discrete(breaks=c("1","2","3"), labels=c("Extremely Low", "Fairly Low", "Moderately Low")) +
ggtitle("Plot of lipit level by blocks") +
xlab("Fat content of diet") +
ylab("Lipit levels")
ggplot(data = df, aes(x, val)) + geom_line(aes(linetype=block)) +
scale_x_discrete(breaks=c("1","2","3"), labels=c("Extremely Low", "Fairly Low", "Moderately Low")) +
ggtitle("Plot of lipit level by blocks") +
xlab("Fat content of diet") +
ylab("Lipit levels")
?data.frame
?matrix
matrix(Yij, 5,3)
matrix(Yij, 3,5)
t(matrix(Yij, 3,5))
x = data.frame(t(matrix(Yij, 3,5)))
x
boxplot(x,notch=TRUE,main="Notched boxplot with error bars")
error.bars(x,add=TRUE)
library(psych)
install.packages("psych")
library(psych)
error.bars(x)
boxplot(x,main="Notched boxplot with error bars")
error.bars(x)
boxplot(x,main="Notched boxplot with error bars")
error.bars(x, add = TRUE)
error.bars(x, alpha = 0.05)
error.bars(x, alpha = 0.05, bar = TRUE)
sd(x$X1)
qnorm(0.975)
sd(x$X1)
s=sd(x$X1)
mean(x$X1)-1.96*s
x = data.frame(t(matrix(Yij, 3,5)))
error.bars(x, alpha = 0.025, bar = TRUE)
?error.bars
x = data.frame(t(matrix(Yij, 3,5)))
error.bars(x, bar = TRUE)
s=sd(x$X1)
s
mean(x$X1)-1*s
library(gplots)
names(x) = c("treatment1", "treatment2", "treatment3")
x
treament_means = tapply(x, mean)
sapply(x, mean)
treament_means = sapply(x, mean)
treatment_means = sapply(x, mean)
treatment_mean = sapply(x, mean)
treatment_sd = tapply(x, sd)
treatment_sd = sapply(x, sd)
treatment_sd
upper = treatment_mean+ 1.96*treatment_sd
lower = treatment_mean- 1.96*treatment_sd
upper
lower
barplot2(treatment, beside = TRUE, horiz = TRUE, plot.ci = TRUE, ci.u = upper, ci.l = lower, xlim = c(0, 20), title(main = "Bart interval graph for treatment mean", font.main = 4)
)
barplot2(treatment_mean, beside = TRUE, horiz = TRUE, plot.ci = TRUE, ci.u = upper, ci.l = lower, xlim = c(0, 20), title(main = "Bart interval graph for treatment mean", font.main = 4))
barplot2(treatment_mean, beside = TRUE, horiz = TRUE, plot.ci = TRUE, ci.u = upper, ci.l = lower, ylim = c(0,4),xlim = c(0, 20), title(main = "Bart interval graph for treatment mean", font.main = 4))
treatment_mean = sapply(x, mean)
treatment_sd = sapply(x, sd)
upper = treatment_mean+ 1.96*treatment_sd
lower = treatment_mean- 1.96*treatment_sd
barplot2(treatment_mean, beside = TRUE, horiz = TRUE, plot.ci = TRUE, ci.u = upper, ci.l = lower, ylim = c(0,4),xlim = c(0, 20), title(main = "Bart interval graph for treatment mean", font.main = 4))
barplot2(treatment_mean, beside = TRUE,plot.ci = TRUE, ci.u = upper, ci.l = lower, ylim = c(0,20), xlim = c(0, 20), title(main = "Bart interval graph for treatment mean", font.main = 4))
barplot2(treatment_mean)
barplot2(treatment_mean,plot.ci = TRUE, ci.u = upper, ci.l = lower)
barplot2(treatment_mean,plot.ci = TRUE, ci.u = upper, ci.l = lower), ylim = c(0,2), main = "Bart interval graph for treatment mean")
barplot2(treatment_mean,plot.ci = TRUE, ci.u = upper, ci.l = lower, ylim = c(0,2), main = "Bart interval graph for treatment mean")
?barplot2
barplot2(treatment_mean, plot.ci = TRUE, ci.u = upper, ci.l = lower, ylim = c(0,2), main = "Bart interval graph for treatment mean", cex.axis = 1, cex.names = 1)
0.66015/0.0024375
qf(0.95, 2,8)
1.11-0.992
0.05/4
0.05/4-1
0.00243750*2.5
sqrt(0.0061)
sqrt(0.00243750*2.5)
qt(0.9875, 8)
sqrt(0.00243750*2/5)
0.00243750*2/5
sqrt(0.00975)
sqrt(0.000975)
a=2.7515*0.0312
0.118-a
0.118+a
0.992-0.43
0.562-a
0.562+a
0.3547/0.0024375
qf(0.95, 4, 8)
pf(270.83, 2, 8)
1-pf(270.83, 2, 8)
pf(145.5179, 4, 8)
1-pf(145.5179, 4, 8)
(4*0.3547+8*0.0024375)/12/0.0024375
(4*0.3547+8*0.0024375)/12
0.1198/0.0024
13*11/15/9
48.15/3/6.24
+0.6667
48.15/3/6.24+0.6667
0.3527/0.0024375
0.3527/0.0024375/3
0.3527/0.0024375/3+0.6667
0.1+0.1+0.1==0.3
(0.1+0.1+0.1)==0.3
0.1==0.3
0.1+0.1+(0.1==0.3)
0.1+0.1+(0.1==0.3+0.1)
0.1+0.1+0.1==0.3+0.1
library(xlsx)
kidney <- read.xlsx2("kidney.xlsx", 1)
getwd
getwd()
setwd(~/Desktop/201601-03)
setwd(/Desktop/201601-03)
setwd("/Desktop/201601-03")
setwd("/Desktop")
setwd("~/Desktop")
ls()
list.files()
setwd("~/Desktop/201601-13")
setwd("~/Desktop/201601-13/")
setwd("~/Desktop/201601-03/")
list.files()
setwd("~/Desktop/201601-03/sta207")
list.files()
setwd("~/Desktop/201601-03/sta207/homework")
list.files()
setwd("~/Desktop/201601-03/sta207/homework/hw1")
list.files()
kidney <- read.xlsx2("kidney.xlsx", 1)
?read.xlsx2
head(kidney)
str(kidney)
sapply(kidney, class)
transform_function <- function(x) {
log10(x + 1)
}
kidney$Days <- transform_function(as.numeric(as.character(kidney$Days)))
nrow(kidney)
with(kidney, subset(Duration == 2&Weight == 1)
)
subset(kidney,Duration == 2&Weight == 1)
nrow(subset(kidney,Duration == 2&Weight == 1))
kidney <- subset(kidney, Duration != 2 | Weight != 1)
kidney
nrow(kidney)
str(kidney)
setwd("~/Desktop/201601-03/sta207/homework/hw1")
setwd("~/Desktop/201601-03/sta207/homework/hw1")
list.files()
head(kidney)
unique(kidney$Duration)
kidney$X1 = ifelse(kidney$Duration == 1, 1, -1)
head(kidney)
unique(kidney$Weight)
kidney$X2 = ifelse(kidney$Weight == 1,1, ifelse(kidney$Weight == 3, -1, 0))
kidney$X3 = ifelse(kidney$Weight == 2,1, ifelse(kidney$Weight == 3, -1, 0))
kidney
?lm
fullModel = with(Kidney, lm(Days~X1+X2+X3)
)
fullModel = with(kidney, lm(Days~X1+X2+X3))
fullModel
reducedModelTestA = with(kidney, lm(Days~X2+X3))
reducedModelTestA
reducedModelTestB = with(kidney, lm(Days~X1))
reducedModelTestB
summary(fullModel)
anova(fullModel)
anova(fullModel)[3,2]
anova(fullModel)[4,2]
anova(reducedModelTestA)
anova(reducedModelTestA)[3,2]
anova(reducedModelTestB)
anova(reducedModelTestB)[2,2]
fullModel
sse.full = anova(fullModel)[4,2]
sse.full
reducedModelTestA = with(kidney, lm(Days~X2+X3))
reducedModelTestA
sse.reduceA = anova(reducedModelTestA)[3,2]
sse.reduceA
reducedModelTestB = with(kidney, lm(Days~X1))
reducedModelTestB
sse.reduceB = anova(reducedModelTestB)[2,2]
sse.reduceB
fullModel
sse.full
reducedModelTestA
reducedModelTestB
sse.reduceA-sse.full
sse.full/46
0.5506265/0.0976048
qf(0.95, 1, 46)
pf(5.6414, 1, 46)
1-pf(5.6414, 1, 46)
(sse.reduceB-sse.full)/2
1.307215/0.0976048
qf(0.95, 2, 46)
pf(3.1996, 2, 46)
pf(13.39294, 2, 46)
1-pf(13.39294, 2, 46)
attach(cars)
head(cars)
with(cars,subset(-dist))
with(cars,subset(-"dist"))
with(cars,subset[,-"dist"])
with(cars,subset[,-dist])
subset(cars, cars$dist)
?subset
subset(cars, select = -dist)
Yij = c(0.73, 0.67, 0.15, 0.86, 0.75, 0.21, 0.94, 0.81, 0.26, 1.4, 1.32, 0.75, 1.62, 1.41, 0.78)
matrix(Yij, 5,3)
matrix(Yij, 5,3,2)
df(Yij, 5,3,2)
data.frame(Yij, 5,3,2)
obs = data.frame(matrix(Yij, 5,3,2))
obs
obs = data.frame(matrix(Yij, 5,3,2))
rownames(obs) = c("block1", "block2", "block3", "block4", "block5")
names(obs) = c("treatment1", "treatment2", "treatment3")
obs
obs[1,3] = NA
obs[5,1] = NA
obs
ob
obs
Y_ij = c(0.73, 0.67, 0.86, 0.75, 0.21, 0.94, 0.81, 0.26, 1.4, 1.32, 0.75, 1.41, 0.78)
X1 = c(1,1,0,0,0,0,0,0,0,0,0,-1,-1)
length(X1)
length(Y_ij)
X5 = c(1,0,1,0,-1,1,0,-1,1,0,-1,0,-1)
length(X5)
Y_ij = c(0.73, 0.67, 0.86, 0.75, 0.21, 0.94, 0.81, 0.26, 1.4, 1.32, 0.75, 1.41, 0.78)
X1 = c(1,1,0,0,0,0,0,0,0,0,0,-1,-1)
X2 = c(0,0,1,1,1,0,0,0,0,0,0,-1,-1)
X3 = c(0,0,0,0,0,1,1,1,0,0,0,-1,-1)
X4 = c(0,0,0,0,0,0,0,0,1,1,1,-1,-1)
X5 = c(1,0,1,0,-1,1,0,-1,1,0,-1,0,-1)
X6 = c(0,1,0,1,-1,0,1,-1,0,1,-1,1,-1)
cbind(Y_in, X1, X2, X3, X4, X5)
cbind(Y_ij, X1, X2, X3, X4, X5)
cbind(Y_ij, X1, X2, X3, X4, X5,X6)
Y = c(0.73, 0.67, 0.86, 0.75, 0.21, 0.94, 0.81, 0.26, 1.4, 1.32, 0.75, 1.41, 0.78)
X1 = c(1,1,0,0,0,0,0,0,0,0,0,-1,-1)
X2 = c(0,0,1,1,1,0,0,0,0,0,0,-1,-1)
X3 = c(0,0,0,0,0,1,1,1,0,0,0,-1,-1)
X4 = c(0,0,0,0,0,0,0,0,1,1,1,-1,-1)
X5 = c(1,0,1,0,-1,1,0,-1,1,0,-1,0,-1)
X6 = c(0,1,0,1,-1,0,1,-1,0,1,-1,1,-1)
cbind(Y, X1, X2, X3, X4, X5,X6)
df = cbind(Y, X1, X2, X3, X4, X5,X6)
class(df)
df = data.frame(df)
df
fullModel2 = with(df, lm(Y~.))
df = data.frame(df)
fullModel2 = with(df, lm(Y~.))
fullModel2 = with(df, lm(Y~X1+X2+X3+X4+X5+X6))
fullModel2
anova(fullModel2)
sse.full2 = anova(fullModel2)[7,2]
sse.full2
reducedModel2 = with(df, lm(Y~X1+X2+X3+X4))
reducedModel2
sse.reduce2 = anova(reducedModel2)[5,2]
sse.reduce2
fullModel2
reducedModel2
anova(fullModel2)
summary(fullModel2)
sse.reduce2- sse.full2
(sse.reduce2- sse.full2)/2
sse.full2/6
0.4753/0.00058
qf(0.95, 2, 6)
pf(819.48, 2, 6)
fullModel2
2*0.2508-0.1626
2*0.2508+0.1626
summary(fullModel2)
vcov(fullmodel2)
vcov(fullModel2)
vcov(fullModel2)
4*1.051128e-04+8.656346e-05+4*(-4.328173e-05)
sqrt(4*1.051128e-04+8.656346e-05+4*(-4.328173e-05))
qt(0.99,6)
0.6642+3.142668*0.0182726
0.6642-3.142668*0.0182726
rep(1,9)
X = matrix(rep(1,9),c(1,1,1,rep(0,6)))
X
?matrix
a1 = rep(1,9)
a2 = c(rep(1,3), rep(0,6))
a3 = c(0,0,0,1,1,1,0,0,0)
a4 = c(1,0,0,1,0,0,1,0,0)
a5 = c(0,1,0,0,1,0,0,1,0)
X = cbind(a1,a2,a3,a4,a5)
X
